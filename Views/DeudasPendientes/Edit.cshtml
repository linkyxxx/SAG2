@model SAG2.Models.DeudaPendiente
@{
    ViewBag.Title = "Modificar";
}
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<div id="SAGBox">
    <h3>Deudas pendientes</h3>
    <div id="controles">
        <p><a href="../Index" onclick="window.open(this.href, 'Buscar','width=750,height=400,scrollbars=yes,menubar=no,toolbars=no'); return false">BUSCAR</a></p>
        <p>@Html.ActionLink("NUEVO", "Create")</p>
        <p><a href="./Index" id="Guardar">GUARDAR</a></p>
        <p><a href="../../Imprimir/DeudaPendiente/@Html.Raw(Model.ID.ToString())" onclick="window.open(this.href, 'Comprobante de Deuda Pendiente','width=800,height=600,scrollbars=yes,menubar=no,toolbars=no'); return false">IMPRIMIR</a></p>
        <p><a href="../Delete/@Html.Raw(Model.ID.ToString())" onclick="return confirm('Realmente desea borrar este registro?');">ELIMINAR</a></p>
        <p>@Html.ActionLink("CANCELAR", "Create")</p>
    </div>
<div id="contenido" class="cuentacorriente">
@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    @Html.Raw(@ViewBag.Mensaje)
    @Html.HiddenFor(model => model.ID)
    @Html.HiddenFor(model => model.Periodo)
    @Html.HiddenFor(model => model.Mes)
    @Html.HiddenFor(model => model.NumeroComprobante)
    @Html.HiddenFor(model => model.ProyectoID)
    <fieldset>
        <legend>Modificar deuda pendiente</legend>
        <div class="editor-label expandido">
            @Html.LabelFor(model => model.NumeroComprobante)
        </div>
        <div class="editor-field">
            <input type="text" readonly="readonly" value="@Model.NumeroComprobante" size="@Model.NumeroComprobante.ToString().Length" />
        </div>
        
        <div class="editor-label expandido">
            @Html.LabelFor(model => model.Fecha)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Fecha, new { @class = "calendario_mov", @Value = DateTime.Now.ToShortDateString(), @readonly = "readonly" })
        </div>

        <div class="editor-label expandido">
            @Html.LabelFor(model => model.CuentaID, "Cuenta")
        </div>
        <div class="editor-field">
            <select id="CuentaID" name="CuentaID">
                @Html.Raw(ViewBag.Arbol)
            </select>
        </div>
        
        <div class="editor-label expandido">
            @Html.LabelFor(model => model.DocumentoID, "Documento")
        </div>
        <div class="editor-field">
            @Html.DropDownList("DocumentoID", String.Empty)
        </div>

        <div class="editor-label expandido">
            @Html.LabelFor(model => model.NumeroDocumento)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.NumeroDocumento)
        </div>


        <div class="editor-label expandido">
            @Html.LabelFor(model => model.Monto)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Monto)
        </div>

        <div class="editor-label expandido">
            @Html.LabelFor(model => model.FechaEmision)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.FechaEmision, new { @class = "calendario", @readonly = "readonly" })
        </div>

        <div class="editor-label expandido">
            @Html.LabelFor(model => model.FechaVencimiento)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.FechaVencimiento, new { @class = "calendario", @readonly = "readonly" })
        </div>

        <div class="editor-label expandido">
            @Html.Label("Beneficiario")
        </div>
        <div class="editor-field tipobeneficiario">
            <select name="tipoBeneficiario" id="tipoBeneficiario">
                <option value="1"@if (Model.Persona != null)
                                        { @Html.Raw(" selected=\"selected\"") }>Personal</option>
                <option value="2"@if (Model.Proveedor != null)
                                           { @Html.Raw(" selected=\"selected\"") }>Proveedores</option>
                <option value="3"@if (Model.Persona == null && Model.Proveedor == null)
                                    { @Html.Raw(" selected=\"selected\"") }>Otro</option>
            </select> 
            @Html.Hidden("PersonaID")
            @Html.Hidden("ProveedorID")

            <span id="InfoBeneficiario">
                @Html.TextBoxFor(model => model.Rut, new { @style = "width: 60px;", @maxlength = "8" })-@Html.TextBoxFor(model => model.DV, new { @id="DVBuscar", @style = "width: 15px;", @maxlength = "1" }) 
                <img src="@Url.Content("~/Content/Images/Buscar2.png")" class="BuscarPopUpPersonal" alt="Buscar" title="Buscar" style="vertical-align: middle; cursor:pointer;" />
                @Html.TextBoxFor(model => model.Beneficiario, new { @style = "width: 250px;", @readonly = "readonly" })
            </span>
        </div>

        <div class="editor-label expandido">
            @Html.LabelFor(model => model.Glosa)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.Glosa, new { @cols = "57", @rows = "7" })
        </div>

        <p>
            <input type="submit" value="Guardar" id="botonGuardar" />
        </p>
    </fieldset>
}
    </div>
</div>