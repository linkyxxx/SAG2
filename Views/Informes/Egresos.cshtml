@model IEnumerable<SAG2.Models.Movimiento>
@{
    ViewBag.Title = "Egresos";
    var total = 0;
    SAG2.Classes.Util utils = new SAG2.Classes.Util();
}
<div id="SAGBox">
    <h2>Informe de Egresos</h2>
@using (Html.BeginForm())
{
    if (@ViewBag.Rendicion == null || !@ViewBag.Rendicion.Equals("Rendicion"))
    {
    <table border="0" class="sin-hover">
        <tr>
            <td>
                <fieldset style="width: 460px;">
                    <legend>Período</legend>
                    <table class="sin-hover" align="center" cellspacing="0" cellpadding="5">
                        <tr>
                            <td>Desde</td>
                            <td>
                                <input name="Desde" id="Desde" class="calendario" maxlength="10" value="@Html.Raw(@ViewBag.Desde)" />
                            </td>
                            <td rowspan="2" valign="middle" style="width: 36px;"><input type="submit" value="Ver resultados!" style="height: 100%;" class="boton" /></td>
                            <td rowspan="2" valign="middle"><input type="button" value="Imprimir" class="imprimirBotonPeriodo boton" style="height: 100%;" /></td>
                            <td rowspan="2" valign="middle"><input type="button" value="Excel" tipo="Egresos" class="excelBotonPeriodo boton" style="height: 100%;" /></td>
                        </tr>
                        <tr>
                            <td>Hasta</td>
                            <td>
                                <input name="Hasta" id="Hasta" class="calendario" maxlength="10" value="@Html.Raw(@ViewBag.Hasta)" />
                            </td>
                        </tr>
                    </table>
                </fieldset>
            </td>
        </tr>
    </table>
    }
}
    <p>&nbsp;</p>
    <div style="height: 300px; overflow: scroll;">
    <table cellpadding="5" border="1" style="width: 100%;">
        <tr>
            <th>Nº Egreso</th>
            <th>Fecha</th>
            <th>Nº Cheque</th>
            <th>Documento</th>
            <th>Nº Doc.</th>
            <th>Fecha</th>
            <th>Beneficiario</th>
            <th>Monto $</th>
            <th>Cuenta</th>
            <th>Glosa</th>
            <th>Cta. Cte.</th>
        </tr>
    @foreach (var item in Model)
    {
        if (item.TipoComprobanteID != 2)
        {
            continue;
        }
        
        if (item.Nulo != null && item.Nulo.Equals("S"))
        {
            <tr style="text-decoration: line-through;" itemid="@item.ID">
            <td align="center">
                    @item.NumeroComprobante
                </td>
                <td>
                    @item.Fecha.Value.ToShortDateString()
                </td>
                <td align="right">
                    @item.Cheque
                </td>
                <td>@try
                    {
                        @Html.Raw(@item.Documento.NombreLista)
                    }
                    catch (Exception)
                    {}
                </td>
                <td>@try
                    {
                        @Html.Raw(@item.NDocumento.ToString())
                    }
                    catch (Exception)
                    {}
                </td>
                <td>
                    @try
                    {
                        @item.FechaCheque.Value.ToShortDateString()
                    }
                    catch (Exception)
                    {}
                </td>
                <td>
                    @if (item.Persona != null)
                    {
                        @Html.DisplayFor(modelItem => item.Persona.NombreCompleto)
                    }
                    else if (item.Proveedor != null)
                    {
                        @Html.DisplayFor(modelItem => item.Proveedor.Nombre)
                    }
                    else
                    { 
                        @Html.Raw(@item.Beneficiario)
                    }
                </td>
                <td align="right">
                    <strong>
                    $@item.Monto_Egresos.ToString("#,##0")
                    </strong>
                </td>
                <td align="left">@if (@item.Cuenta != null)
                                 { @Html.Raw(utils.cuentaPadre(@item.Cuenta)) }</td>
                <td>
                    COMPROBANTE NULO
                </td>
                <td>
                    @item.CuentaCorriente.Numero
                </td>
            </tr>
        }
        else if (item.Documento != null && item.Documento.ID == 100)
        {
            <tr style="text-decoration: line-through;" itemid="@item.ID">
            <td align="center">
                    @item.NumeroComprobante
                </td>
                <td>
                    @item.Fecha.Value.ToShortDateString()
                </td>
                <td align="right">
                    @item.Cheque
                </td>
                <td>@try
                    {
                        @Html.Raw(@item.Documento.NombreLista)
                    }
                    catch (Exception)
                    {}
                </td>
                <td>@try
                    {
                        @Html.Raw(@item.NDocumento.ToString())
                    }
                    catch (Exception)
                    {}
                </td>
                <td>
                    @try
                    {
                        @item.FechaCheque.Value.ToShortDateString()
                    }
                    catch (Exception)
                    {}
                </td>
                <td>
                    @if (item.Persona != null)
                    {
                        @Html.DisplayFor(modelItem => item.Persona.NombreCompleto)
                    }
                    else if (item.Proveedor != null)
                    {
                        @Html.DisplayFor(modelItem => item.Proveedor.Nombre)
                    }
                    else
                    { 
                        @Html.Raw(@item.Beneficiario)
                    }
                </td>
                <td align="right">
                    <strong>
                    $@item.Monto_Egresos.ToString("#,##0")
                    </strong>
                </td>
                <td align="left">@if (@item.Cuenta != null)
                                 { @Html.Raw(utils.cuentaPadre(@item.Cuenta)) }</td>
                <td>
                    COMPROBANTE NULO
                </td>
                <td>
                    @item.CuentaCorriente.Numero
                </td>
            </tr>
        }
        else
        {
            SAG2.Models.SAG2DB db = new SAG2.Models.SAG2DB();
            List<SAG2.Models.DetalleEgreso> detalles = db.DetalleEgreso.Where(d => d.MovimientoID == item.ID).ToList();
            foreach (var detalle in detalles)
            {
                total = total + detalle.Monto;
            <tr detalleid="@detalle.ID">
                <td align="center">
                    @item.NumeroComprobante
                </td>
                <td>
                    @detalle.Egreso.Fecha.Value.ToShortDateString()
                </td>
                <td align="right">
                    @detalle.Egreso.Cheque
                </td>
                <td>
                    @if (@detalle.Documento != null)
                    {
                        @detalle.Documento.Nombre
                    }
                </td>
                <td>
                    @detalle.NDocumento
                </td>
                <td>
                    @detalle.FechaEmision.ToShortDateString()
                </td>
                <td>
                    @if (detalle.Egreso.Persona != null)
                    {
                        @Html.DisplayFor(modelItem => detalle.Egreso.Persona.NombreCompleto)
                    }
                    else if (detalle.Egreso.Proveedor != null)
                    {
                        @Html.DisplayFor(modelItem => detalle.Egreso.Proveedor.Nombre)
                    }
                    else
                    { 
                        @Html.Raw(@detalle.Egreso.Beneficiario)
                    }
                </td>
                <td align="right">
                    <strong>
                    $@detalle.Monto.ToString("#,##0")
                    </strong>
                </td>
                <td align="left">@if (@detalle.Cuenta != null)
                                 { @Html.Raw(utils.cuentaPadre(@detalle.Cuenta)) }</td>
                <td>
                    @detalle.Glosa
                </td>
                <td>
                    @detalle.Egreso.CuentaCorriente.Numero
                </td>
            </tr>
            }
        }
    }
    </table>
    </div>
    <table align="right" style="width: 100%;">
        <tr>
            <th align="left" width="20" class="sin-hover">
                <a href="../Imprimir/InformeEgreso?Desde=@Html.Raw(@ViewBag.Desde)&Hasta=@Html.Raw(@ViewBag.Hasta)" class="imprimirInformePeriodo">
                    <img src="@Url.Content("~/Content/Images/Printer.png")" width="20" height="20" title="Imprimir Informe" border="0" />
                </a>
            </th>
            <th align="right">Total Egresos <input value="$@total.ToString("#,###")" readonly="readonly" style="text-align: right;" /></th>
        </tr>
    </table>
</div>